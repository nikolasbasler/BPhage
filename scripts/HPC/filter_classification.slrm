#!/bin/bash -l
#SBATCH --job-name="filter_classification"
#SBATCH --cluster=genius
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --mem-per-cpu=4G
#SBATCH --time=5:00
#SBATCH --account=lp_jm_virome_group
#SBATCH --output=slurm-%x_%j.out

###############################################################################

# Submit (from output/slurm_log)
# sbatch ../../scripts/HPC/filter_classification.slrm

source /data/leuven/341/vsc34111/mambaforge/etc/profile.d/conda.sh
conda activate viper_bphage
repo_location="$VSC_STAGING/BPhage"

mkdir -p $VSC_SCRATCH/BPhage/filter_classification
cd $VSC_SCRATCH/BPhage/filter_classification

# Generate merged table from checkv and genomad outputs, filtered down to at least 50% complete genomes.
# Caudoviricetes are included in the phage output table although some Caudos infect archaea. I have no
# indication of archaea present in my dataset, though. 
# Mind the order of these arguments.
python3 $repo_location/scripts/HPC/filter_classification.py \
    $repo_location/output/bphage_ALL_1kb_genomad/bphage_ALL_1kb_cross_95-85_summary/bphage_ALL_1kb_cross_95-85_virus_summary.tsv.gz \
    $repo_location/output/bphage_ALL_1kb_checkv/quality_summary.tsv.gz \
    $repo_location/data/VMR_19-250422_MSL37.xlsx \
    bphage_ALL_1kb

# Make fasta file for phages
cut -d',' -f1 bphage_ALL_1kb_phages.csv | sed 1d > temp.phage.contigs
zcat $repo_location/output/bphage_ALL_1kb_cross_95-85.fasta.gz | seqkit grep -f temp.phage.contigs > bphage_ALL_1kb_phages.fasta

# Make fasta file for unclassified viruses
cut -d',' -f1 bphage_ALL_1kb_unclassified_viruses.csv | sed 1d > temp.unclassified.contigs
zcat $repo_location/output/bphage_ALL_1kb_cross_95-85.fasta.gz | seqkit grep -f temp.unclassified.contigs > bphage_ALL_1kb_unclassified_viruses.fasta

# Make fasta file for picobirnas 
cut -d',' -f1 bphage_ALL_1kb_picobirna.csv | sed 1d > temp.picobirna.contigs
zcat $repo_location/output/bphage_ALL_1kb_cross_95-85.fasta.gz | seqkit grep -f temp.picobirna.contigs > bphage_ALL_1kb_picobirna.fasta

# Filter data from additional studies
cd $repo_location/output/other_studies_checkv
zcat quality_summary.tsv.gz | awk '$10>=50 {print $1}' | sed 1d > other_studies_filtered_contigs
seqkit grep -rf other_studies_filtered_contigs $VSC_SCRATCH/BPhage/additional_datasets/other_studies.fa.gz | \
    gzip > $repo_location/output/other_studies_filtered.fasta.gz

# Copy output
gzip *fasta
cp *.fasta.gz $repo_location/output/
cp *.csv $repo_location/output/

# Clean up
rm temp.*

echo "========================================================================"
duration=$SECONDS
printf 'Job finished in: %02d:%02d:%02d\n' $((duration/3600)) $((duration%3600/60)) $((duration%60))
