#!/bin/bash -l
#SBATCH --job-name="prepare_mapping"
#SBATCH --cluster=genius
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --mem-per-cpu=4G
#SBATCH --time=5:00
#SBATCH --account=lp_jm_virome_group
#SBATCH --output=slurm-%x_%j.out

###############################################################################

# Submit (from output/slurm_log)
# sbatch --export=ALL ../../scripts/HPC/prepare_mapping.slrm

source /data/leuven/341/vsc34111/mambaforge/etc/profile.d/conda.sh
conda activate viper_bphage
repo_location="$VSC_STAGING/BPhage"

mkdir -p $VSC_SCRATCH/BPhage/ref
cd $VSC_SCRATCH/BPhage/ref

# Sequences identified as phages
zcat $repo_location/output/phages/bphage_ALL_1kb_phages.fasta.gz > bphage_mapping_ref.fasta

# Unidentified viral sequences
zcat $repo_location/output/phages/bphage_ALL_1kb_unclassified_viruses.fasta.gz >> bphage_mapping_ref.fasta

# Picobirnaviridae
zcat $repo_location/output/phages/bphage_ALL_1kb_genomad/bphage_ALL_1kb_cross_95-85_summary/bphage_ALL_1kb_cross_95-85_virus_summary.tsv.gz | \
    grep "Picobirnaviridae" | cut -f1 > temp.picobirna
seqkit grep -f temp.picobirna <(zcat $repo_location/output/bphage_ALL_1kb_cross_95-85.fasta.gz) >> bphage_mapping_ref.fasta

# Build bwa-mem2 index
bwa-mem2 index bphage_mapping_ref.fasta bphage_mapping_ref.fasta

# Clean up
rm temp.picobirna

echo "========================================================================"
duration=$SECONDS
printf 'Job finished in: %02d:%02d:%02d\n' $((duration/3600)) $((duration%3600/60)) $((duration%60))
