#!/bin/bash -l
#SBATCH --job-name="SNP_analysis_SKA2_prepare"
#SBATCH --cluster=genius
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=4
#SBATCH --mem-per-cpu=4G
#SBATCH --time=3:00:00
#SBATCH --account=lp_jm_virome_group
#SBATCH --output=slurm-%x_%a_%A.out

###############################################################################

# Submit (from output/slurm_log)
# sbatch --array=1-150 --export=ALL ../../scripts/HPC/SNP_analysis_SKA2_prepare.slrm

source /data/leuven/341/vsc34111/mambaforge/etc/profile.d/conda.sh
conda activate viper_bphage
repo_location="$VSC_STAGING/BPhage"
threads=4

line=$(head -n $SLURM_ARRAY_TASK_ID $repo_location/data/BPhage.bee.pool.list | tail -n1)

mkdir -p $VSC_SCRATCH/BPhage/SNP/merged_reads
cd $VSC_SCRATCH/BPhage/SNP/

# Re-create the reads that mapped against the bee genome (were deleted during ViPER pipeline)
for gutpart in $(echo "mid ile rec"); do 
    for pair in $(echo "R1 R2"); do
        zcat $repo_location/output/bphage_viper_output/READ/${line}_${gutpart}_*.Hostout.${pair}.fastq.gz | \
            awk 'NR%4==1 {print $0}' | sed 's/^@//g' > temp.${line}_${gutpart}.Hostout.${pair}.readnames
        seqkit grep -v -f temp.${line}_${gutpart}.Hostout.${pair}.readnames \
            $repo_location/output/bphage_viper_output/READ/${line}_${gutpart}_*.trimmed.${pair}.fastq.gz | \
            pigz -p $threads > temp.${line}_${gutpart}.host.${pair}.fastq.gz
    done
done

# Merge reads per bee pool 
cat temp.${line}_*.host.R1.fastq.gz > merged_reads/${line}.host.R1.fastq.gz
cat temp.${line}_*.host.R2.fastq.gz > merged_reads/${line}.host.R2.fastq.gz

# Get reads mapping to core phages
samtools merge -@ $threads - $repo_location/output/mapped_phages/${line}*.bam | samtools sort -@ $threads \
    > temp.${line}.merge.sort.bam
samtools index temp.${line}.merge.sort.bam
samtools view -@ $threads -b -F2308 --region-file $repo_location/data/core_contigs.bed temp.${line}.merge.sort.bam | \
    samtools collate -@ $threads -O - | \
    samtools fastq -1 merged_reads/${line}.core.R1.fastq.gz -2 merged_reads/${line}.core.R2.fastq.gz \
    -0 temp.${line}.unpaired.reads.fastq.gz -s temp.${line}.singleton.reads.fastq.gz

# Get reads from all terL mappings
samtools view -@ $threads -b -F2308 mapped_terL/${line}_all_terLs.bam | \
    samtools collate -@ $threads -O - | \
    samtools fastq -1 merged_reads/${line}.all_terLs.R1.fastq.gz -2 merged_reads/${line}.all_terLs.R2.fastq.gz \
    -0 temp.${line}.all_terLs.unpaired.reads.fastq.gz -s temp.${line}.all_terLs.singleton.reads.fastq.gz

# Get reads from terL core mappings
samtools view -@ $threads -b -F2308 mapped_terL/${line}_core_terLs.bam | \
    samtools collate -@ $threads -O - | \
    samtools fastq -1 merged_reads/${line}.core_terLs.R1.fastq.gz -2 merged_reads/${line}.core_terLs.R2.fastq.gz \
    -0 temp.${line}.core_terLs.unpaired.reads.fastq.gz -s temp.${line}.core_terLs.singleton.reads.fastq.gz

# Get reads from A. cerana genome mapping
samtools view -@ $threads -b -F2308 mapped_Acerana/${line}_Acer.bam | \
    samtools collate -@ $threads -O - | \
    samtools fastq -1 merged_reads/${line}.Acer_genome.R1.fastq.gz -2 merged_reads/${line}.Acer_genome.R2.fastq.gz \
    -0 temp.${line}.Acer_genome.unpaired.reads.fastq.gz -s temp.${line}.Acer_genome.singleton.reads.fastq.gz

# Get reads mapping to A. cerana mitochondrion
samtools index mapped_Acerana/${line}_Acer.bam
samtools view -@ $threads -b -F2308 --region-file $repo_location/data/A_cerana_mt.bed mapped_Acerana/${line}_Acer.bam | \
    samtools collate -@ $threads -O - | \
    samtools fastq -1 merged_reads/${line}.Acer_mt.R1.fastq.gz -2 merged_reads/${line}.Acer_mt.R2.fastq.gz \
    -0 temp.${line}.Acer_mt.unpaired.reads.fastq.gz -s temp.${line}.Acer_mt.singleton.reads.fastq.gz

# Get reads mapping to A. cerana CO1 gene
samtools view -@ $threads -b -F2308 --region-file $repo_location/data/A_cerana_CO1.bed mapped_Acerana/${line}_Acer.bam | \
    samtools collate -@ $threads -O - | \
    samtools fastq -1 merged_reads/${line}.A_cerana_CO1.R1.fastq.gz -2 merged_reads/${line}.A_cerana_CO1.R2.fastq.gz \
    -0 temp.${line}.A_cerana_CO1.unpaired.reads.fastq.gz -s temp.${line}.A_cerana_CO1.singleton.reads.fastq.gz

# Get coverage info
conda activate ska2
# for dataset in $(echo "host core all_terLs core_terLs Acer_genome Acer_mt A_cerana_CO1"); do
for dataset in $(echo "Acer_genome"); do
    ska cov -k 31 merged_reads/${line}.${dataset}.R1.fastq.gz merged_reads/${line}.${dataset}.R2.fastq.gz \
        > merged_reads/${line}.${dataset}.cov
done

# Clean up
rm temp.${line}*

echo "========================================================================"
duration=$SECONDS
printf 'Job finished in: %02d:%02d:%02d\n' $((duration/3600)) $((duration%3600/60)) $((duration%60))
